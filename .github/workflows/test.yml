name: Test and publish

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "**/*.md"
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: Use yarn cache
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            ~/.npm-packages-offline-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Install deps
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn install --frozen-lockfile --prefer-offline
      - name: Build
        id: yarn-pack-dir
        run: ./tools/build.sh
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: angularfire-${{ github.run_id }}
          path: dist
          retention-days: 1
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node: ["10", "12", "14"]
    name: Test Node.js ${{ matrix.node }} (Ubuntu)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - name: Use yarn cache
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            ~/.npm-packages-offline-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Use Firebase emulator cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: firebase_emulators
      - name: Install deps
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v2
      - name: Run tests
        run: |
          mv angularfire-${{ github.run_id }} dist
          yarn test:node
  headless:
    runs-on: ubuntu-latest
    needs: build
    name: Test Headless Chrome (Ubuntu)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          check-latest: true
      - name: Use yarn cache
        uses: actions/cache@v2
        with:
          path: |
            ./node_modules
            ~/.npm-packages-offline-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Use Firebase emulator cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: firebase_emulators
      - name: Install deps
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v2
      - name: Run tests
        run: |
          mv angularfire-${{ github.run_id }} dist
          yarn test:chrome-headless
  publish:
    runs-on: ubuntu-latest
    name: Publish (NPM)
    needs: ['test', 'headless']
    if: ${{ github.ref == 'refs/heads/master' || github.event_name == 'release' }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v2
      - name: Publish
        run: |
          cd ./angularfire-${{ github.run_id }}/packages-dist
          chmod +x publish.sh
          ./publish.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}