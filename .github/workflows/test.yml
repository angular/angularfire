name: Test and publish

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches:
      - "**"
  release:
    types:
      - published
  schedule:
    - cron: 0 0 * * 1-5

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
      - name: node_modules cache
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-14-9-9-6-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-14-12-9-9-6-node_modules-
            ${{ runner.os }}-14-12-9-9-
            ${{ runner.os }}-14-12-9-
            ${{ runner.os }}-14-12-
            ${{ runner.os }}-14-
      - name: Yarn offline cache
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.npm-packages-offline-cache
          key: yarn-offline-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-offline
      - name: Install deps
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set yarn-offline-mirror-pruning true
          yarn install --frozen-lockfile --prefer-offline
      - name: Build
        id: yarn-pack-dir
        run: ./tools/build.sh
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: angularfire-${{ github.run_id }}
          path: dist
          retention-days: 1

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        node: ["12", "14", "16"]
        firebase: ["9"]
        firebaseTools: ["9"]
        rxjs: ["6", "7"]
        ng: ["12"]
      fail-fast: false
    name: Test firebase@${{ matrix.firebase }} firebase-tools@${{ matrix.firebaseTools }} ng@${{ matrix.ng }} rxjs@${{ matrix.rxjs}} on ${{ matrix.os }} Node.js ${{ matrix.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - name: node_modules cache
        id: node_modules_cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-${{ matrix.rxjs }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-${{ matrix.rxjs }}-node_modules-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-
            ${{ runner.os }}-${{ matrix.node }}-
      - name: Yarn offline cache
        uses: actions/cache@v2
        with:
          path: ~/.npm-packages-offline-cache
          key: yarn-offline-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-offline
      - name: Configure yarn
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set ignore-engines true
      - name: Yarn install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Bump deps
        run: |
          yarn add firebase@${{ matrix.firebase }}
          yarn add firebase-tools@${{ matrix.firebaseTools }}
          yarn add rxjs@${{ matrix.rxjs }} --prefer-offline
          npx ng update @angular/core@${{ matrix.ng }} @angular/cli@${{ matrix.ng }} --allow-dirty --force || true
      - name: Firebase emulator cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: firebase_emulators
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Relocate Artifacts
        run: mv angularfire-${{ github.run_id }} dist
      - name: Test node
        run: |
          yarn build:jasmine
          yarn test:node
      - name: Test browser
        if: matrix.os == 'ubuntu-latest' && matrix.node == '14' && matrix.firebaseTools == '9'
        run: yarn test:chrome-headless

  # TODO dry up
  canary:
    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [ 'build', 'test' ]
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node: ["14"]
        firebase: ["9", "canary"]
        firebaseTools: ["9"]
        rxjs: ["7"]
        ng: ["12", "next"]
        exclude:
          # standard configuration
          - firebase: 9
            ng: 12
      fail-fast: false
    name: Canary firebase@${{ matrix.firebase }} firebase-tools@${{ matrix.firebaseTools }} ng@${{ matrix.ng }} rxjs@${{ matrix.rxjs}} on ${{ matrix.os }} Node.js ${{ matrix.node }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - name: node_modules cache
        id: node_modules_cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-${{ matrix.rxjs }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-${{ matrix.rxjs }}-node_modules-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-${{ matrix.firebaseTools }}-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-${{ matrix.firebase }}-
            ${{ runner.os }}-${{ matrix.node }}-${{ matrix.ng }}-
            ${{ runner.os }}-${{ matrix.node }}-
      - name: Yarn offline cache
        uses: actions/cache@v2
        with:
          path: ~/.npm-packages-offline-cache
          key: yarn-offline-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-offline
      - name: Configure yarn
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set ignore-engines true
      - name: Yarn install
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Bump deps
        run: |
          yarn add firebase@${{ matrix.firebase }}
          yarn add firebase-tools@${{ matrix.firebaseTools }}
          yarn add rxjs@${{ matrix.rxjs }} --prefer-offline
          npx ng update @angular/core@${{ matrix.ng }} @angular/cli@${{ matrix.ng }} --allow-dirty --force || true
      - name: Firebase emulator cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: firebase_emulators
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Relocate Artifacts
        run: mv angularfire-${{ github.run_id }} dist
      - name: Test node
        run: |
          yarn build:jasmine
          yarn test:node
      - name: Test browser
        if: matrix.os == 'ubuntu-latest' && matrix.node == '14' && matrix.firebaseTools == '9'
        run: yarn test:chrome-headless

  contribute:
    runs-on: ${{ matrix.os }}
    name: Contribute ${{ matrix.os }} on Node.js ${{ matrix.node }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        node: ["12", "14", "16"]
        exclude:
          # we build with this combination, safely skip
          - os: ubuntu-latest
            node: 14
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - name: node_modules cache
        uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-12-9-9-6-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-12-9-9-6-node_modules-
            ${{ runner.os }}-${{ matrix.node }}-12-9-9-
            ${{ runner.os }}-${{ matrix.node }}-12-9-
            ${{ runner.os }}-${{ matrix.node }}-12-
            ${{ runner.os }}-${{ matrix.node }}-
      - name: Yarn offline cache
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: ~/.npm-packages-offline-cache
          key: yarn-offline-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-offline
      - name: Install deps
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          yarn config set yarn-offline-mirror ~/.npm-packages-offline-cache
          yarn config set ignore-engines true
          yarn install --frozen-lockfile --prefer-offline
      - name: Build
        run: yarn build
      - name: Test
        # TODO figure out why tests are flaking
        continue-on-error: true
        run: yarn test

  # Break the branch protection test into a seperate step, so we can manage the matrix more easily
  test_and_contribute:
    runs-on: ubuntu-latest
    name: Branch protection
    needs: ['test', 'contribute']
    steps:
      - run: true

  publish:
    runs-on: ubuntu-latest
    name: Publish (NPM)
    needs: ['build', 'test']
    if: ${{ github.ref == 'refs/heads/master' || github.event_name == 'release' }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'
      - name: 'Download Artifacts'
        uses: actions/download-artifact@v2
      - name: Publish
        run: |
          cd ./angularfire-${{ github.run_id }}/packages-dist
          chmod +x publish.sh
          ./publish.sh
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
